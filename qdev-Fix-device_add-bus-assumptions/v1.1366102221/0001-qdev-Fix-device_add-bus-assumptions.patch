From patches Mon Sep 17 00:00:00 2001
From: =?utf-8?q?Andreas_F=C3=A4rber_=3Cafaerber=40suse=2Ede=3E?=
To: =?ISO-8859-1?Q?KONRAD_Fr=E9d=E9ri?= =?ISO-8859-1?Q?c?=
 <fred.konrad@greensocs.com>, None <afaerber@suse.de>, qemu-devel@nongnu.org,
 =?ISO-8859-1?Q?Andreas_F=E4rber?= <afaerber@suse.de>,
 Libaiqing <libaiqing@huawei.com>, Igor Mammedov <imammedo@redhat.com>,
 Andreas =?ISO-8859-1?B?RuRyYmVy?= <afaerber@suse.de>,
 None <fred.konrad@greensocs.com>,
 =?ISO-8859-1?Q?KONRAD_Fr=E9d=E9ric?= <fred.konrad@greensocs.com>
Cc: None <afaerber@suse.de>, "ehabkost@redhat.com" <ehabkost@redhat.com>,
 Haofeng <haofeng@huawei.com>, ehabkost@redhat.com, qemu-devel@nongnu.org,
 "armbru@redhat.com" <armbru@redhat.com>,
 "anthony@codemonkey.ws" <anthony@codemonkey.ws>, armbru@redhat.com,
 =?iso-8859-1?Q?Andreas_F=E4rber?= <afaerber@suse.de>, lcapitulino@redhat.com,
 Libaiqing <libaiqing@huawei.com>, "pbonzini@redhat.com" <pbonzini@redhat.com>,
 Igor Mammedov <imammedo@redhat.com>,
 Andreas =?ISO-8859-1?B?RuRyYmVy?= <afaerber@suse.de>,
 =?UTF-8?q?Andreas=20F=C3=A4rber?= <afaerber@suse.de>, anthony@codemonkey.ws,
 imammedo@redhat.com, pbonzini@redhat.com,
 "qemu-devel@nongnu.org" <qemu-devel@nongnu.org>,
 "lcapitulino@redhat.com" <lcapitulino@redhat.com>
Date: Tue, 16 Apr 2013 03:50:21 +0200
Message-id: 1366077021-28882-1-git-send-email-afaerber@suse.de
Subject: [PATCH 1/1] qdev: Fix device_add bus assumptions

Drop an unreachable fallback bus assignment to SysBus.

If no ,bus= is specified, only search busses recursively for bus type if
the DeviceClass has a bus_type specified. Handle resulting NULL cases.

Signed-off-by: Andreas FÃ¤rber <afaerber@suse.de>
---
 qdev-monitor.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/qdev-monitor.c b/qdev-monitor.c
index 9a78ccf..73d7946 100644
--- a/qdev-monitor.c
+++ b/qdev-monitor.c
@@ -18,6 +18,7 @@
  */
 
 #include "hw/qdev.h"
+#include "hw/sysbus.h"
 #include "monitor/monitor.h"
 #include "monitor/qdev.h"
 #include "qmp-commands.h"
@@ -415,7 +416,7 @@ DeviceState *qdev_device_add(QemuOpts *opts)
     DeviceClass *k;
     const char *driver, *path, *id;
     DeviceState *qdev;
-    BusState *bus;
+    BusState *bus = NULL;
 
     driver = qemu_opt_get(opts, "driver");
     if (!driver) {
@@ -453,7 +454,7 @@ DeviceState *qdev_device_add(QemuOpts *opts)
                           driver, object_get_typename(OBJECT(bus)));
             return NULL;
         }
-    } else {
+    } else if (k->bus_type != NULL) {
         bus = qbus_find_recursive(sysbus_get_default(), NULL, k->bus_type);
         if (!bus) {
             qerror_report(QERR_NO_BUS_FOR_DEVICE,
@@ -461,18 +462,17 @@ DeviceState *qdev_device_add(QemuOpts *opts)
             return NULL;
         }
     }
-    if (qdev_hotplug && !bus->allow_hotplug) {
+    if (qdev_hotplug && bus && !bus->allow_hotplug) {
         qerror_report(QERR_BUS_NO_HOTPLUG, bus->name);
         return NULL;
     }
 
-    if (!bus) {
-        bus = sysbus_get_default();
-    }
-
     /* create device, set properties */
     qdev = DEVICE(object_new(driver));
-    qdev_set_parent_bus(qdev, bus);
+
+    if (bus) {
+        qdev_set_parent_bus(qdev, bus);
+    }
 
     id = qemu_opts_id(opts);
     if (id) {
-- 
1.8.1.4

